#!/usr/bin/env perl

use strict;
use warnings;
use Carp;
use Cwd;
use FindBin;

use lib ("$FindBin::Bin/PerlLib");
use __GLOBALS__;
use Pipeliner;



my $usage = "usage: $0 left.fq [right.fq|NULL] output_directory\n\n";

my $left_fq = $ARGV[0] or die $usage;
my $right_fq = $ARGV[1] or die $usage;
my $output_dir = $ARGV[2] or die $usage;


my $UTILDIR = "$FindBin::Bin/util/star-fusion-util";



main: {
    
    if ($right_fq eq "NULL") {
        $right_fq = "";
    }


    $left_fq = &ensure_full_path($left_fq);
    $right_fq = &ensure_full_path($right_fq) if $right_fq;

    unless (-d $output_dir) {
        &process_cmd("mkdir -p $output_dir");
    }
    
    chdir $output_dir or die "Error, cannot cd to $output_dir";
    
    my $pipeliner = new Pipeliner(-verbose => 2);

    ## Run Star
    
    my $cmd = "STAR --genomeDir $FUSION_ANNOTATOR_LIB/Hg19.fa_star_index "
        . " --readFilesIn $left_fq $right_fq "
        . " --twopassMode Basic "
        . " --outReadsUnmapped None --chimSegmentMin 12 "
        . " --chimJunctionOverhangMin 12 "
        . " --alignSJDBoverhangMin 10 "   
        . " --alignMatesGapMax 200000 "
        . " --alignIntronMax 200000 "
        . " --chimSegmentReadGapMax parameter 3 "
        . " --alignSJstitchMismatchNmax 5 -1 5 5 "  #which allows for up to 5 mismatches for non-canonical GC/AG, and AT/AC junctions, and any number of mismatches for canonical junctions (the default values 0 -1 0 0 replicate the old behavior (from AlexD)
        . " --runThreadN 4"
        . " --limitBAMsortRAM 31532137230 "
        . " --outSAMtype BAM SortedByCoordinate ";
    
    if ($left_fq =~ /\.gz$/) {
        $cmd .= " --readFilesCommand zcat ";
    }
    
    $pipeliner->add_commands(Command->new($cmd, "star.ok"));
 

    ##  assign fusion junctions to genes:

    $cmd = "/home/unix/bhaas/GITHUB/CTAT_FUSIONS/STAR-Fusion/STAR-Fusion -J Chimeric.out.junction --verbose_level 2 --genome_lib_dir /seq/regev_genome_portal/RESOURCES/CTAT_GENOME_LIB/build_dir";
    $pipeliner->add_commands( Command->new($cmd, "star-fusion.ok") );
    
    $pipeliner->run();

    exit(0);

    
}


####
sub ensure_full_path {
    my ($file) = @_;

    if ($file !~ m|^/|) {
        my $curr_dir = cwd();

        $file = "$curr_dir/$file";
    }
    
    return($file);
}

####
sub process_cmd {
    my ($cmd) = @_;

    print STDERR "CMD: $cmd\n";
    my $ret = system($cmd);

    if ($ret) {
        confess "Error, cmd: $cmd died with ret $ret";
    }

    return;
}
